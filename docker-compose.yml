version: '2.1'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://34.204.43.242:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 6
  
  phase1:
    image: phase1-service:latest
    ports:
      - "3000:3000"
    volumes:
      - "/tmp:/tmp"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "otel-collector:4317"
      KAFKA_BOOTSTRAP: "kafka1:19092"
      BASE_PATH: "/tmp"
    depends_on:
      kafka1:
        condition: service_healthy

  phase2:
    image: phase2-service:latest
    volumes:
      - "/tmp:/tmp"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "otel-collector:4317"
      KAFKA_BOOTSTRAP: "kafka1:19092"
      BASE_PATH: "/tmp"
    depends_on:
      kafka1:
        condition: service_healthy

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver

  mariadb:
    image: database:latest
    ports:
      - "3307:3306"
    environment:
      MARIADB_DATABASE: pipeline
      MARIADB_PASSWORD: "123456"
      MARIADB_ROOT_PASSWORD: "123456"
      MARIADB_USER: local
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver

  phase3:
    image: phase3-service:latest
    volumes:
      - "/tmp:/tmp"
    environment:
      MYSQL_USER: local
      MYSQL_PASSWORD: "123456"
      MYSQL_HOST: mariadb
      MYSQL_DATABASE: pipeline
      KAFKA_BOOTSTRAP: "kafka1:19092"
      BASE_PATH: "/tmp"
      OTEL_EXPORTER_OTLP_ENDPOINT: "otel-collector:4317"
    depends_on:
      kafka1:
        condition: service_healthy
      mariadb:
        condition: service_healthy

  
